theory SimpleIf begin

// Function signature and definition of the equational theory E

functions: check_rep/2, fst/1, get_rep/1, pair/2, rep/2 [private], snd/1
equations:
    check_rep(rep(m, loc), loc) = m,
    fst(<x.1, x.2>) = x.1,
    get_rep(rep(m, loc)) = m,
    snd(<x.1, x.2>) = x.2

heuristic: p

rule (modulo E) Init_:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_h_:
   [ State_( ), Fr( h ) ] --> [ State_1( h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) if_equalh_h_0_1:
   [ State_1( h ) ] --[ Pred_equal( h, h ) ]-> [ State_11( h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) if_equalh_h_1_1:
   [ State_1( h ) ] --[ Pred_not_equal( h, h ) ]-> [ State_12( h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_Bogus_11:
   [ State_11( h ) ] --[ Event( ), Bogus( ) ]-> [ State_111( h ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_111:
   [ State_111( h ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_12:
   [ State_12( h ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction predicate1:
  "∀ #i h1 h2. (Pred_not_equal( h1, h2 ) @ #i) ⇒ (¬(h1 = h2))"
  // safety formula

restriction predicate0:
  "∀ #i h1 h2. (Pred_equal( h1, h2 ) @ #i) ⇒ (h1 = h2)"
  // safety formula

lemma bogus_exists:
  exists-trace "∃ #i. Bogus( ) @ #i"
/*
guarded formula characterizing all satisfying traces:
"∃ #i. (Bogus( ) @ #i)"
*/
simplify
solve( State_11( h ) ▶₀ #i )
  case if_equalh_h_0_1
  SOLVED // trace found
qed

/* All well-formedness checks were successful. */

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ... OK.


analyzing: case-studies-sapic-regression/predicates/simple_example.spthy

------------------------------------------------------------------------------
analyzed: case-studies-sapic-regression/predicates/simple_example.spthy

  output:          case-studies-sapic-regression/predicates/simple_example.spthy.tmp
  processing time: 0.03568141s
  bogus_exists (exists-trace): verified (3 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: case-studies-sapic-regression/predicates/simple_example.spthy

  output:          case-studies-sapic-regression/predicates/simple_example.spthy.tmp
  processing time: 0.03568141s
  bogus_exists (exists-trace): verified (3 steps)

==============================================================================
*/
