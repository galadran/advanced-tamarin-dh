theory AttestedComputation begin

// Function signature and definition of the equational theory E

functions: check_rep/2, fst/1, get_rep/1, list/2, pair/2, prog/3,
           rep/2 [private], snd/1
equations:
    check_rep(rep(m, loc), loc) = m,
    fst(<x.1, x.2>) = x.1,
    get_rep(rep(m, loc)) = m,
    snd(<x.1, x.2>) = x.2

heuristic: p

rule (modulo E) Init_:
   [ ] --[ Init( ) ]-> [ State_( ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_init_:
   [ State_( ), Fr( init ) ] --> [ State_1( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Par_1:
   [ State_1( init ) ] --> [ State_11( init ), State_12( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_0_11:
   [ State_11( init ) ] --> [ !Semistate_111( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_1_11:
   [ !Semistate_111( init ) ] --> [ State_111( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_state_111:
   [ State_111( init ), Fr( state ) ] --> [ State_1111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) insert_state_init_1111:
   [ State_1111( init, state ) ]
  --[ Insert( state, init ) ]->
   [ State_11111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_0_11111:
   [ State_11111( init, state ) ] --> [ !Semistate_111111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_1_11111:
   [ !Semistate_111111( init, state ) ] --> [ State_111111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lock_state_111111[color=#569dc0]:
   [ State_111111( init, state ), Fr( ~lock9 ) ]
  --[ Lock( $9, ~lock9, state ), Lock_9( $9, ~lock9, state ) ]->
   [ State_1111111( ~lock9, init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookup_state_as_lio_0_1111111[color=#569dc0]:
   [ State_1111111( ~lock9, init, state ) ]
  --[ IsIn( state, lio ) ]->
   [ State_11111111( ~lock9, init, lio, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookup_state_as_lio_1_1111111[color=#569dc0]:
   [ State_1111111( ~lock9, init, state ) ]
  --[ IsNotSet( state ) ]->
   [ State_11111112( ~lock9, init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_i_11111111[color=#569dc0]:
   [ State_11111111( ~lock9, init, lio, state ), In( i ) ]
  -->
   [ State_111111111( ~lock9, i, init, lio, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_r_111111111[color=#569dc0]:
   [ State_111111111( ~lock9, i, init, lio, state ), Fr( r ) ]
  -->
   [ State_1111111111( ~lock9, i, init, lio, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) event_Remote_progr_i_lio_i_lio_l__1111111111[color=#569dc0]:
   [ State_1111111111( ~lock9, i, init, lio, r, state ) ]
  --[ Event( ), Remote( <prog(r, i, lio), i, lio>, 'l' ) ]->
   [ State_11111111111( ~lock9, i, init, lio, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) out_progr_i_lio_rep_progr_i_lio_i_lio_l___11111111111[color=#569dc0]:
   [ State_11111111111( ~lock9, i, init, lio, r, state ) ]
  -->
   [
   State_111111111111( ~lock9, i, init, lio, r, state ),
   Out( <prog(r, i, lio), rep(<prog(r, i, lio), i, lio>, 'l')> )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) insert_state_listprogr_i_lio_listi_lio_111111111111[color=#569dc0]:
   [ State_111111111111( ~lock9, i, init, lio, r, state ) ]
  --[ Insert( state, list(prog(r, i, lio), list(i, lio)) ) ]->
   [ State_1111111111111( ~lock9, i, init, lio, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlock_state_1111111111111[color=#569dc0]:
   [ State_1111111111111( ~lock9, i, init, lio, r, state ) ]
  --[ Unlock( $9, ~lock9, state ), Unlock_9( $9, ~lock9, state ) ]->
   [ State_11111111111111( ~lock9, i, init, lio, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_11111111111111[color=#569dc0]:
   [ State_11111111111111( ~lock9, i, init, lio, r, state ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_11111112[color=#569dc0]:
   [ State_11111112( ~lock9, init, state ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_0_12:
   [ State_12( init ) ] --> [ !Semistate_121( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_1_12:
   [ !Semistate_121( init ) ] --> [ State_121( init ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) new_state_121:
   [ State_121( init ), Fr( state ) ] --> [ State_1211( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) insert_state_init_1211:
   [ State_1211( init, state ) ]
  --[ Insert( state, init ) ]->
   [ State_12111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_0_12111:
   [ State_12111( init, state ) ] --> [ !Semistate_121111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rep_1_12111:
   [ !Semistate_121111( init, state ) ] --> [ State_121111( init, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) in_i_o_r__121111[color=#2cd719]:
   [ State_121111( init, state ), In( <i, o, r> ) ]
  -->
   [ State_1211111( i, init, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lock_state_1211111[color=#2cd719]:
   [ State_1211111( i, init, o, r, state ), Fr( ~lock7 ) ]
  --[ Lock( $7, ~lock7, state ), Lock_7( $7, ~lock7, state ) ]->
   [ State_12111111( ~lock7, i, init, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookup_state_as_lio_0_12111111[color=#2cd719]:
   [ State_12111111( ~lock7, i, init, o, r, state ) ]
  --[ IsIn( state, lio ) ]->
   [ State_121111111( ~lock7, i, init, lio, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) lookup_state_as_lio_1_12111111[color=#2cd719]:
   [ State_12111111( ~lock7, i, init, o, r, state ) ]
  --[ IsNotSet( state ) ]->
   [ State_121111112( ~lock7, i, init, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) if_eq_o_i_lio_check_repr_l__0_121111111[color=#2cd719]:
   [ State_121111111( ~lock7, i, init, lio, o, r, state ) ]
  --[ Pred_eq( <o, i, lio>, check_rep(r, 'l') ) ]->
   [ State_1211111111( ~lock7, i, init, lio, o, r, state ) ]

  /*
  rule (modulo AC) if_eq_o_i_lio_check_repr_l__0_121111111[color=#2cd719]:
     [ State_121111111( ~lock7, i, init, lio, o, r, state ) ]
    --[ Pred_eq( <o, i, lio>, z ) ]->
     [ State_1211111111( ~lock7, i, init, lio, o, r, state ) ]
    variants (modulo AC)
    1. r     = r.9
       z     = check_rep(r.9, 'l')
    
    2. r     = rep(x.9, 'l')
       z     = x.9
  */

rule (modulo E) if_eq_o_i_lio_check_repr_l__1_121111111[color=#2cd719]:
   [ State_121111111( ~lock7, i, init, lio, o, r, state ) ]
  --[ Pred_not_eq( <o, i, lio>, check_rep(r, 'l') ) ]->
   [ State_1211111112( ~lock7, i, init, lio, o, r, state ) ]

  /*
  rule (modulo AC) if_eq_o_i_lio_check_repr_l__1_121111111[color=#2cd719]:
     [ State_121111111( ~lock7, i, init, lio, o, r, state ) ]
    --[ Pred_not_eq( <o, i, lio>, z ) ]->
     [ State_1211111112( ~lock7, i, init, lio, o, r, state ) ]
    variants (modulo AC)
    1. r     = r.9
       z     = check_rep(r.9, 'l')
    
    2. r     = rep(x.9, 'l')
       z     = x.9
  */

rule (modulo E) event_Local_o_i_lio_l__1211111111[color=#2cd719]:
   [ State_1211111111( ~lock7, i, init, lio, o, r, state ) ]
  --[ Event( ), Local( <o, i, lio>, 'l' ) ]->
   [ State_12111111111( ~lock7, i, init, lio, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) insert_state_listo_listi_lio_12111111111[color=#2cd719]:
   [ State_12111111111( ~lock7, i, init, lio, o, r, state ) ]
  --[ Insert( state, list(o, list(i, lio)) ) ]->
   [ State_121111111111( ~lock7, i, init, lio, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlock_state_121111111111[color=#2cd719]:
   [ State_121111111111( ~lock7, i, init, lio, o, r, state ) ]
  --[ Unlock( $7, ~lock7, state ), Unlock_7( $7, ~lock7, state ) ]->
   [ State_1211111111111( ~lock7, i, init, lio, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_1211111111111[color=#2cd719]:
   [ State_1211111111111( ~lock7, i, init, lio, o, r, state ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) unlock_state_1211111112[color=#2cd719]:
   [ State_1211111112( ~lock7, i, init, lio, o, r, state ) ]
  --[ Unlock( $7, ~lock7, state ), Unlock_7( $7, ~lock7, state ) ]->
   [ State_12111111121( ~lock7, i, init, lio, o, r, state ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_12111111121[color=#2cd719]:
   [ State_12111111121( ~lock7, i, init, lio, o, r, state ) ] --> [ ]

  /* has exactly the trivial AC variant */

rule (modulo E) Zero_121111112[color=#2cd719]:
   [ State_121111112( ~lock7, i, init, o, r, state ) ] --> [ ]

  /* has exactly the trivial AC variant */

restriction set_in:
  "∀ x y #t3.
    (IsIn( x, y ) @ #t3) ⇒
    (∃ #t2.
      (((Insert( x, y ) @ #t2) ∧ (#t2 < #t3)) ∧
       (∀ #t1. (Delete( x ) @ #t1) ⇒ ((#t1 < #t2) ∨ (#t3 < #t1)))) ∧
      (∀ #t1 yp.
        (Insert( x, yp ) @ #t1) ⇒ (((#t1 < #t2) ∨ (#t1 = #t2)) ∨ (#t3 < #t1))))"

restriction set_notin:
  "∀ x #t3.
    (IsNotSet( x ) @ #t3) ⇒
    ((∀ #t1 y. (Insert( x, y ) @ #t1) ⇒ (#t3 < #t1)) ∨
     (∃ #t1.
       ((Delete( x ) @ #t1) ∧ (#t1 < #t3)) ∧
       (∀ #t2 y. ((Insert( x, y ) @ #t2) ∧ (#t2 < #t3)) ⇒ (#t2 < #t1))))"

restriction predicate_eq:
  "∀ #i a b. (Pred_eq( a, b ) @ #i) ⇒ (a = b)"
  // safety formula

restriction predicate_not_eq:
  "∀ #i a b. (Pred_not_eq( a, b ) @ #i) ⇒ (¬(a = b))"
  // safety formula

restriction single_session:
  "∀ #i #j. ((Init( ) @ #i) ∧ (Init( ) @ #j)) ⇒ (#i = #j)"
  // safety formula

restriction locking_9:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_9( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_9( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction locking_7:
  "∀ p pp l x lp #t1 #t3.
    ((Lock_7( p, l, x ) @ #t1) ∧ (Lock( pp, lp, x ) @ #t3)) ⇒
    ((((#t1 < #t3) ∧
       (∃ #t2.
         (((((Unlock_7( p, l, x ) @ #t2) ∧ (#t1 < #t2)) ∧ (#t2 < #t3)) ∧
           (∀ #t0 pp.1. (Unlock( pp.1, l, x ) @ #t0) ⇒ (#t0 = #t2))) ∧
          (∀ pp.1 lpp #t0.
            (Lock( pp.1, lpp, x ) @ #t0) ⇒
            (((#t0 < #t1) ∨ (#t0 = #t1)) ∨ (#t2 < #t0)))) ∧
         (∀ pp.1 lpp #t0.
           (Unlock( pp.1, lpp, x ) @ #t0) ⇒
           (((#t0 < #t1) ∨ (#t2 < #t0)) ∨ (#t2 = #t0))))) ∨
      (#t3 < #t1)) ∨
     (#t1 = #t3))"

restriction predicate1:
  "∀ #i x y. (Pred_not_pred_rep( x, y ) @ #i) ⇒ (¬(¬(y = 'l')))"
  // safety formula

restriction predicate0:
  "∀ #i x y. (Pred_pred_rep( x, y ) @ #i) ⇒ (¬(y = 'l'))"
  // safety formula

lemma attested_comput:
  all-traces
  "∀ #i m.
    (Local( m, 'l' ) @ #i) ⇒ (∃ #j. (Remote( m, 'l' ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ #i m.
  (Local( m, 'l' ) @ #i) ∧ ∀ #j. (Remote( m, 'l' ) @ #j) ⇒ ¬(#j < #i)"
*/
simplify
solve( State_1211111111( ~lock7, i.1, init, lio, o, r, state ) ▶₀ #i )
  case if_eq_o_i_lio_check_repr_l__0_121111111_case_1
  by contradiction /* from formulas */
next
  case if_eq_o_i_lio_check_repr_l__0_121111111_case_2
  solve( (#vr.6 < #t2)  ∥ (#vr.6 = #t2) )
    case case_1
    solve( (#vr.25 < #t2.1)  ∥ (#vr.25 = #t2.1) )
      case case_1
      solve( Insert( ~n.1, lio ) @ #t2 )
        case insert_state_init_1111
        by solve( State_1111( lio, ~n.1 ) ▶₀ #t2 )
      next
        case insert_state_init_1211
        solve( State_1211( lio, ~n.1 ) ▶₀ #t2 )
          case new_state_121
          by contradiction /* cyclic */
        qed
      next
        case insert_state_listo_listi_lio_12111111111
        solve( State_12111111111( ~lock7.1, i.2, init, lio, o, r, ~n.1 ) ▶₀ #t2 )
          case event_Local_o_i_lio_l__1211111111_case_1
          solve( ((#vr.2 < #vr.32) ∧
                  (∃ #t2.
                    (Unlock_7( $7, ~lock7, ~n.2 ) @ #t2)
                   ∧
                    (#vr.2 < #t2) ∧
                    (#t2 < #vr.32) ∧
                    (∀ #t0 pp. (Unlock( pp, ~lock7, ~n.2 ) @ #t0) ⇒ #t0 = #t2) ∧
                    (∀ pp lpp #t0.
                      (Lock( pp, lpp, ~n.2 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                    (∀ pp lpp #t0.
                      (Unlock( pp, lpp, ~n.2 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                 (#vr.32 < #vr.2) )
            case case_1
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.44 < #t2.4)  ∥ (#vr.44 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.1 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.43 < #t2.4)  ∥ (#vr.43 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.44 < #t2.3)  ∥ (#vr.44 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.1 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.44 < #t2.6)  ∥ (#vr.44 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( Insert( ~n.4, lio.1 ) @ #t2.2 )
                              case insert_state_init_1111
                              solve( State_1111( lio.1, ~n.4 ) ▶₀ #t2.2 )
                                case new_state_111
                                by contradiction /* cyclic */
                              qed
                            next
                              case insert_state_init_1211
                              by solve( State_1211( lio.1, ~n.4 ) ▶₀ #t2.2 )
                            next
                              case insert_state_listo_listi_lio_12111111111
                              by solve( (#vr.17, 0) ~~> (#vk, 0) )
                            next
                              case insert_state_listprogr_i_lio_listi_lio_111111111111
                              by solve( (#vr.17, 0) ~~> (#vk, 0) )
                            qed
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.59 < #t2.6)  ∥ (#vr.59 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.5, lio.1 ) @ #t2.2 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.4 ) ▶₀ #t2.2 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.4 ) ▶₀ #t2.2 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#t2.1 < #t2.6)  ∥ (#t2.1 = #t2.6) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.5, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.58 < #t2.6)  ∥ (#vr.58 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.7, lio.1 ) @ #t2.4 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.4 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.4 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.43 < #t2.3)  ∥ (#vr.43 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.43 < #t2.5)  ∥ (#vr.43 = #t2.5) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.4, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.4 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.4 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.16, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.16, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.58 < #t2.5)  ∥ (#vr.58 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.5, lio.1 ) @ #t2.3 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.3 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.3 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( Insert( ~n.5, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.57 < #t2.5)  ∥ (#vr.57 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.7, lio.1 ) @ #t2.5 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.5 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.5 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          qed
        next
          case event_Local_o_i_lio_l__1211111111_case_2
          solve( ((#vr.2 < #vr.32) ∧
                  (∃ #t2.
                    (Unlock_7( $7, ~lock7, ~n.1 ) @ #t2)
                   ∧
                    (#vr.2 < #t2) ∧
                    (#t2 < #vr.32) ∧
                    (∀ #t0 pp. (Unlock( pp, ~lock7, ~n.1 ) @ #t0) ⇒ #t0 = #t2) ∧
                    (∀ pp lpp #t0.
                      (Lock( pp, lpp, ~n.1 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                    (∀ pp lpp #t0.
                      (Unlock( pp, lpp, ~n.1 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                 (#vr.32 < #vr.2) )
            case case_1
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.47 < #t2.4)  ∥ (#vr.47 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.1 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.46 < #t2.4)  ∥ (#vr.46 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.47 < #t2.3)  ∥ (#vr.47 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.1 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.59 < #t2.6)  ∥ (#vr.59 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.5, lio.1 ) @ #t2.2 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.2 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.2 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.62 < #t2.6)  ∥ (#vr.62 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.5, lio.1 ) @ #t2.2 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.4 ) ▶₀ #t2.2 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.4 ) ▶₀ #t2.2 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.1 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.58 < #t2.6)  ∥ (#vr.58 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.7, lio.1 ) @ #t2.4 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.4 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.4 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.61 < #t2.6)  ∥ (#vr.61 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.6, lio.1 ) @ #t2.3 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.3 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.3 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.7, lio.1 ) @ #t2.4 )
                            case insert_state_init_1111
                            solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.4 )
                              case new_state_111
                              by contradiction /* cyclic */
                            qed
                          next
                            case insert_state_init_1211
                            by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.4 )
                          next
                            case insert_state_listo_listi_lio_12111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          next
                            case insert_state_listprogr_i_lio_listi_lio_111111111111
                            by solve( (#vr.17, 0) ~~> (#vk, 0) )
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              qed
            next
              case case_2
              solve( (#vr.46 < #t2.3)  ∥ (#vr.46 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.58 < #t2.5)  ∥ (#vr.58 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.5, lio.1 ) @ #t2.3 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.3 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.3 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.61 < #t2.5)  ∥ (#vr.61 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.5, lio.1 ) @ #t2.3 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.5 ) ▶₀ #t2.3 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.5 ) ▶₀ #t2.3 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.57 < #t2.5)  ∥ (#vr.57 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.7, lio.1 ) @ #t2.5 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.5 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.5 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.1 < #t2.5)  ∥ (#t2.1 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.60 < #t2.5)  ∥ (#vr.60 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.6, lio.1 ) @ #t2.4 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.6 ) ▶₀ #t2.4 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.6 ) ▶₀ #t2.4 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.7, lio.1 ) @ #t2.5 )
                          case insert_state_init_1111
                          solve( State_1111( lio.1, ~n.7 ) ▶₀ #t2.5 )
                            case new_state_111
                            by contradiction /* cyclic */
                          qed
                        next
                          case insert_state_init_1211
                          by solve( State_1211( lio.1, ~n.7 ) ▶₀ #t2.5 )
                        next
                          case insert_state_listo_listi_lio_12111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        next
                          case insert_state_listprogr_i_lio_listi_lio_111111111111
                          by solve( (#vr.16, 0) ~~> (#vk, 0) )
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            qed
          qed
        qed
      next
        case insert_state_listprogr_i_lio_listi_lio_111111111111
        by solve( State_111111111111( ~lock9, i.2, init, lio, r, ~n.1 ) ▶₀ #t2 )
      qed
    next
      case case_2
      solve( Insert( ~n.1, lio ) @ #t2.1 )
        case insert_state_init_1111
        by solve( State_1111( lio, ~n.1 ) ▶₀ #t2.1 )
      next
        case insert_state_init_1211
        solve( State_1211( lio, ~n.1 ) ▶₀ #t2.1 )
          case new_state_121
          by contradiction /* cyclic */
        qed
      next
        case insert_state_listo_listi_lio_12111111111
        solve( State_12111111111( ~lock7.1, i.2, init, lio, o, r, ~n.1
               ) ▶₀ #t2.1 )
          case event_Local_o_i_lio_l__1211111111_case_1
          solve( ((#vr.2 < #vr.31) ∧
                  (∃ #t2.
                    (Unlock_7( $7, ~lock7, ~n.2 ) @ #t2)
                   ∧
                    (#vr.2 < #t2) ∧
                    (#t2 < #vr.31) ∧
                    (∀ #t0 pp. (Unlock( pp, ~lock7, ~n.2 ) @ #t0) ⇒ #t0 = #t2) ∧
                    (∀ pp lpp #t0.
                      (Lock( pp, lpp, ~n.2 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                    (∀ pp lpp #t0.
                      (Unlock( pp, lpp, ~n.2 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                 (#vr.31 < #vr.2) )
            case case_1
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.43 < #t2.4)  ∥ (#vr.43 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.42 < #t2.4)  ∥ (#vr.42 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.4 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.43 < #t2.3)  ∥ (#vr.43 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.43 < #t2.6)  ∥ (#vr.43 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                            case case_1
                            by contradiction /* from formulas */
                          next
                            case case_2
                            solve( Insert( ~n.3, lio.1 ) @ #t2 )
                              case insert_state_init_1111
                              by contradiction /* impossible chain */
                            qed
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.58 < #t2.6)  ∥ (#vr.58 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#t2.2 < #t2.6)  ∥ (#t2.2 = #t2.6) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.57 < #t2.6)  ∥ (#vr.57 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.42 < #t2.3)  ∥ (#vr.42 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.42 < #t2.5)  ∥ (#vr.42 = #t2.5) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        by contradiction /* from formulas */
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.57 < #t2.5)  ∥ (#vr.57 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.2 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                         ) ▶₀ #t2.4 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                        case case_1
                        by contradiction /* from formulas */
                      next
                        case case_2
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.56 < #t2.5)  ∥ (#vr.56 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.4, init, lio.2, o.1, r, ~n.2
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        next
          case event_Local_o_i_lio_l__1211111111_case_2
          solve( ((#vr.2 < #vr.31) ∧
                  (∃ #t2.
                    (Unlock_7( $7, ~lock7, ~n.1 ) @ #t2)
                   ∧
                    (#vr.2 < #t2) ∧
                    (#t2 < #vr.31) ∧
                    (∀ #t0 pp. (Unlock( pp, ~lock7, ~n.1 ) @ #t0) ⇒ #t0 = #t2) ∧
                    (∀ pp lpp #t0.
                      (Lock( pp, lpp, ~n.1 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t0 = #vr.2) ∨ (#t2 < #t0))) ∧
                    (∀ pp lpp #t0.
                      (Unlock( pp, lpp, ~n.1 ) @ #t0)
                     ⇒
                      ((#t0 < #vr.2) ∨ (#t2 < #t0) ∨ (#t2 = #t0)))))  ∥
                 (#vr.31 < #vr.2) )
            case case_1
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.46 < #t2.4)  ∥ (#vr.46 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.45 < #t2.4)  ∥ (#vr.45 = #t2.4) )
                case case_1
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.3 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( Unlock_7( $7, ~lock7, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.4 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    by contradiction /* cyclic */
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    by contradiction /* cyclic */
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          next
            case case_2
            solve( (#vr.6 < #t2.2)  ∥ (#vr.6 = #t2.2) )
              case case_1
              solve( (#vr.46 < #t2.3)  ∥ (#vr.46 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.2 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.58 < #t2.6)  ∥ (#vr.58 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.61 < #t2.6)  ∥ (#vr.61 = #t2.6) )
                        case case_1
                        solve( (#t2.3 < #t2.5)  ∥ (#t2.3 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.2, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.4 < #t2.6)  ∥ (#t2.4 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.2, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.2 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.57 < #t2.6)  ∥ (#vr.57 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.3, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#vr.6 < #t2.5)  ∥ (#vr.6 = #t2.5) )
                      case case_1
                      solve( (#vr.60 < #t2.6)  ∥ (#vr.60 = #t2.6) )
                        case case_1
                        solve( (#t2.4 < #t2.5)  ∥ (#t2.4 = #t2.5) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.2, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      next
                        case case_2
                        solve( (#t2.5 < #t2.6)  ∥ (#t2.5 = #t2.6) )
                          case case_1
                          by contradiction /* from formulas */
                        next
                          case case_2
                          solve( Insert( ~n.2, lio.1 ) @ #t2 )
                            case insert_state_init_1111
                            by contradiction /* impossible chain */
                          qed
                        qed
                      qed
                    next
                      case case_2
                      by contradiction /* from formulas */
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              qed
            next
              case case_2
              solve( (#vr.45 < #t2.3)  ∥ (#vr.45 = #t2.3) )
                case case_1
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.3 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.57 < #t2.5)  ∥ (#vr.57 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.60 < #t2.5)  ∥ (#vr.60 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.2, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.2, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.3 )
                qed
              next
                case case_2
                solve( Unlock_7( $7.1, ~lock7.1, ~n.1 ) @ #t2.4 )
                  case unlock_state_121111111111
                  solve( State_121111111111( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                         ) ▶₀ #t2.4 )
                    case insert_state_listo_listi_lio_12111111111_case_1
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.56 < #t2.5)  ∥ (#vr.56 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.3, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  next
                    case insert_state_listo_listi_lio_12111111111_case_2
                    solve( (#t2.2 < #t2.5)  ∥ (#t2.2 = #t2.5) )
                      case case_1
                      by contradiction /* from formulas */
                    next
                      case case_2
                      solve( (#vr.59 < #t2.5)  ∥ (#vr.59 = #t2.5) )
                        case case_1
                        solve( Insert( ~n.2, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      next
                        case case_2
                        solve( Insert( ~n.2, lio.1 ) @ #t2 )
                          case insert_state_init_1111
                          by contradiction /* impossible chain */
                        qed
                      qed
                    qed
                  qed
                next
                  case unlock_state_1211111112
                  by solve( State_1211111112( ~lock7.1, i.5, init, lio.3, o.2, r, ~n.1
                            ) ▶₀ #t2.4 )
                qed
              qed
            qed
          qed
        qed
      next
        case insert_state_listprogr_i_lio_listi_lio_111111111111
        by solve( State_111111111111( ~lock9, i.2, init, lio, r, ~n.1
                  ) ▶₀ #t2.1 )
      qed
    qed
  next
    case case_2
    solve( (#vr.24 < #t2.1)  ∥ (#vr.24 = #t2.1) )
      case case_1
      solve( Insert( ~n.1, lio ) @ #t2 )
        case insert_state_init_1211
        solve( Insert( ~n.3, lio ) @ #t2.1 )
          case insert_state_init_1111
          solve( State_1111( lio, ~n.3 ) ▶₀ #t2.1 )
            case new_state_111
            by contradiction /* cyclic */
          qed
        next
          case insert_state_init_1211
          by solve( State_1211( lio, ~n.3 ) ▶₀ #t2.1 )
        next
          case insert_state_listo_listi_lio_12111111111
          by solve( (#vr.16, 0) ~~> (#vk, 0) )
        next
          case insert_state_listprogr_i_lio_listi_lio_111111111111
          by solve( (#vr.16, 0) ~~> (#vk, 0) )
        qed
      qed
    next
      case case_2
      solve( Insert( ~n.1, lio ) @ #t2 )
        case insert_state_init_1211
        solve( Insert( ~n.3, lio ) @ #t2.1 )
          case insert_state_init_1111
          by contradiction /* impossible chain */
        qed
      qed
    qed
  qed
qed

/*
WARNING: the following wellformedness checks failed!

unbound:
  rule `lookup_state_as_lio_0_1111111' has unbound variables: 
    lio
  
  rule `lookup_state_as_lio_0_12111111' has unbound variables: 
    lio

Restriction actions:
  restriction `set_in' references action 
    (ProtoFact Linear "Delete" 1,1,Linear)
  but no rule has such an action.
  
  restriction `set_notin' references action 
    (ProtoFact Linear "Delete" 1,1,Linear)
  but no rule has such an action.
  
  restriction `predicate1' references action 
    (ProtoFact Linear "Pred_not_pred_rep" 2,2,Linear)
  but no rule has such an action.
  
  restriction `predicate0' references action 
    (ProtoFact Linear "Pred_pred_rep" 2,2,Linear)
  but no rule has such an action.
*/

end
/* Output
maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.
SAPIC tool: 'sapic'
Checking availablity ... OK.


analyzing: case-studies-sapic-regression/locations/AC.spthy

------------------------------------------------------------------------------
analyzed: case-studies-sapic-regression/locations/AC.spthy

  output:          case-studies-sapic-regression/locations/AC.spthy.tmp
  processing time: 15.839742445s
  WARNING: 6 wellformedness check failed!
           The analysis results might be wrong!
  
  attested_comput (all-traces): verified (576 steps)

------------------------------------------------------------------------------

==============================================================================
summary of summaries:

analyzed: case-studies-sapic-regression/locations/AC.spthy

  output:          case-studies-sapic-regression/locations/AC.spthy.tmp
  processing time: 15.839742445s
  WARNING: 6 wellformedness check failed!
           The analysis results might be wrong!
  
  attested_comput (all-traces): verified (576 steps)

==============================================================================
*/
