theory EnvelopeSimple
begin

functions: rep/2 [private], check_rep/2, get_rep/1
equations: check_rep(rep(m,loc),loc)=m, get_rep(rep(m,loc))=m
section{* Envelope protocol *}

builtins: signing, asymmetric-encryption

functions: h/2

heuristic: p /* heuristic for SAPIC */

rule Init_: // [process=top-level] Init 
 [] --[Init()]-> [State_()]

rule insert_pcr_zero__: // [process=top-level] insert 'pcr','zero' 
 [State_()] --[Insert('pcr', 'zero')]-> [State_1()]

rule new_aik_1: // [process=top-level] new aik 
 [State_1(), Fr(aik)] --[]-> [State_11(aik)]

rule out_pkaik_11: // [process=top-level] out pk(aik) 
 [State_11(aik)] --[]-> [State_111(aik), Out(pk(aik))]

rule new_tpmkey_111: // [process=top-level] new tpmkey 
 [State_111(aik), Fr(tpmkey)] --[]-> [State_1111(aik, tpmkey)]

rule out_pktpmkey_1111: // [process=top-level] out pk(tpmkey) 
 [State_1111(aik, tpmkey)] --[]-> [State_11111(aik, tpmkey), Out(pk(tpmkey))]

rule Par_11111: // [process=top-level] Par 
 [State_11111(aik, tpmkey)] --[]-> [State_111111(aik, tpmkey), State_111112(aik, tpmkey)]

rule Par_111111: // [process=top-level] Par 
 [State_111111(aik, tpmkey)] --[]-> [State_1111111(aik, tpmkey), State_1111112(aik, tpmkey)]

rule Par_1111111: // [process=top-level] Par 
 [State_1111111(aik, tpmkey)] --[]-> [State_11111111(aik, tpmkey), State_11111112(aik, tpmkey)]

rule Par_11111111: // [process=top-level] Par 
 [State_11111111(aik, tpmkey)] --[]-> [State_111111111(aik, tpmkey), State_111111112(aik, tpmkey)]

rule Par_111111111: // [process=top-level] Par 
 [State_111111111(aik, tpmkey)] --[]-> [State_1111111111(aik, tpmkey), State_1111111112(aik, tpmkey)]

rule Par_1111111111: // [process=top-level] Par 
 [State_1111111111(aik, tpmkey)] --[]-> [State_11111111111(aik, tpmkey), State_11111111112(aik, tpmkey)]

rule Rep_0_11111111111 [color=#569DC0]: // [process=extend] Rep, 0 
 [State_11111111111(aik, tpmkey)] --[]-> [!Semistate_111111111111(aik, tpmkey)]

rule Rep_1_11111111111 [color=#569DC0]: // [process=extend] Rep, 1 
 [!Semistate_111111111111(aik, tpmkey)] --[]-> [State_111111111111(aik, tpmkey)]

rule in_m_111111111111 [color=#569DC0]: // [process=extend] in m 
 [State_111111111111(aik, tpmkey), In(m)] --[]-> [State_1111111111111(aik, m, tpmkey)]

rule lookup_pcr_as_prev_0_1111111111111 [color=#569DC0]: // [process=extend] lookup 'pcr' as prev, 0 
 [State_1111111111111(aik, m, tpmkey)] --[IsIn('pcr', prev)]-> [State_11111111111111(aik, m, prev, tpmkey)]

rule lookup_pcr_as_prev_1_1111111111111 [color=#569DC0]: // [process=extend] lookup 'pcr' as prev, 1 
 [State_1111111111111(aik, m, tpmkey)] --[IsNotSet('pcr')]-> [State_11111111111112(aik, m, tpmkey)]

rule insert_pcr_hprev_m_11111111111111 [color=#569DC0]: // [process=extend] insert 'pcr',h(prev, m) 
 [State_11111111111111(aik, m, prev, tpmkey)] --[Insert('pcr', h(prev, m))]-> [State_111111111111111(aik, m, prev, tpmkey)]

rule Zero_111111111111111 [color=#569DC0]: // [process=extend] Zero 
 [State_111111111111111(aik, m, prev, tpmkey)] --[]-> []

rule Zero_11111111111112 [color=#569DC0]: // [process=extend] Zero 
 [State_11111111111112(aik, m, tpmkey)] --[]-> []

rule Rep_0_11111111112 [color=#2CD719]: // [process=reboot] Rep, 0 
 [State_11111111112(aik, tpmkey)] --[]-> [!Semistate_111111111121(aik, tpmkey)]

rule Rep_1_11111111112 [color=#2CD719]: // [process=reboot] Rep, 1 
 [!Semistate_111111111121(aik, tpmkey)] --[]-> [State_111111111121(aik, tpmkey)]

rule insert_pcr_zero__111111111121 [color=#2CD719]: // [process=reboot] insert 'pcr','zero' 
 [State_111111111121(aik, tpmkey)] --[Insert('pcr', 'zero')]-> [State_1111111111211(aik, tpmkey)]

rule Zero_1111111111211 [color=#2CD719]: // [process=reboot] Zero 
 [State_1111111111211(aik, tpmkey)] --[]-> []

rule Rep_0_1111111112 [color=#11EC28]: // [process=read_pcr] Rep, 0 
 [State_1111111112(aik, tpmkey)] --[]-> [!Semistate_11111111121(aik, tpmkey)]

rule Rep_1_1111111112 [color=#11EC28]: // [process=read_pcr] Rep, 1 
 [!Semistate_11111111121(aik, tpmkey)] --[]-> [State_11111111121(aik, tpmkey)]

rule lookup_pcr_as_value_0_11111111121 [color=#11EC28]: // [process=read_pcr] lookup 'pcr' as value, 0 
 [State_11111111121(aik, tpmkey)] --[IsIn('pcr', value)]-> [State_111111111211(aik, tpmkey, value)]

rule lookup_pcr_as_value_1_11111111121 [color=#11EC28]: // [process=read_pcr] lookup 'pcr' as value, 1 
 [State_11111111121(aik, tpmkey)] --[IsNotSet('pcr')]-> [State_111111111212(aik, tpmkey)]

rule out_value_111111111211 [color=#11EC28]: // [process=read_pcr] out value 
 [State_111111111211(aik, tpmkey, value)] --[]-> [State_1111111112111(aik, tpmkey, value), Out(value)]

rule Zero_1111111112111 [color=#11EC28]: // [process=read_pcr] Zero 
 [State_1111111112111(aik, tpmkey, value)] --[]-> []

rule Zero_111111111212 [color=#11EC28]: // [process=read_pcr] Zero 
 [State_111111111212(aik, tpmkey)] --[]-> []

rule Rep_0_111111112 [color=#45D1E2]: // [process=envelope] Rep, 0 
 [State_111111112(aik, tpmkey)] --[]-> [!Semistate_1111111121(aik, tpmkey)]

rule Rep_1_111111112 [color=#45D1E2]: // [process=envelope] Rep, 1 
 [!Semistate_1111111121(aik, tpmkey)] --[]-> [State_1111111121(aik, tpmkey)]

rule lookup_pcr_as_value_0_1111111121 [color=#45D1E2]: // [process=envelope] lookup 'pcr' as value, 0 
 [State_1111111121(aik, tpmkey)] --[IsIn('pcr', value)]-> [State_11111111211(aik, tpmkey, value)]

rule lookup_pcr_as_value_1_1111111121 [color=#45D1E2]: // [process=envelope] lookup 'pcr' as value, 1 
 [State_1111111121(aik, tpmkey)] --[IsNotSet('pcr')]-> [State_11111111212(aik, tpmkey)]

rule if_eqvalue_zero__0_11111111211 [color=#45D1E2]: // [process=envelope] if eq(value, 'zero'), 0 
 [State_11111111211(aik, tpmkey, value)] --[Pred_eq(value, 'zero')]-> [State_111111112111(aik, tpmkey, value)]

rule if_eqvalue_zero__1_11111111211 [color=#45D1E2]: // [process=envelope] if eq(value, 'zero'), 1 
 [State_11111111211(aik, tpmkey, value)] --[Pred_not_eq(value, 'zero')]-> [State_111111112112(aik, tpmkey, value)]

rule new_n_111111112111 [color=#45D1E2]: // [process=envelope] new n 
 [State_111111112111(aik, tpmkey, value), Fr(n)] --[]-> [State_1111111121111(aik, n, tpmkey, value)]

rule insert_pcr_h_zero_n_1111111121111 [color=#45D1E2]: // [process=envelope] insert 'pcr',h('zero', n) 
 [State_1111111121111(aik, n, tpmkey, value)] --[Insert('pcr', h('zero', n))]-> [State_11111111211111(aik, n, tpmkey, value)]

rule new_bindkey_11111111211111 [color=#45D1E2]: // [process=envelope] new bindkey 
 [State_11111111211111(aik, n, tpmkey, value), Fr(bindkey)] --[]-> [State_111111112111111(aik, bindkey, n, tpmkey, value)]

rule out_aenc_wrap_bindkey_hh_zero_n_obtain__tpmkey_111111112111111 [color=#45D1E2]: // [process=envelope] out aenc(<'wrap', bindkey, h(h('zero', n), 'obtain')>, tpmkey) 
 [State_111111112111111(aik, bindkey, n, tpmkey, value)] --[]-> [State_1111111121111111(aik, bindkey, n, tpmkey, value), Out(aenc(<'wrap', bindkey, h(h('zero', n), 'obtain')>, tpmkey))]

rule new_secret_1111111121111111 [color=#45D1E2]: // [process=envelope] new secret 
 [State_1111111121111111(aik, bindkey, n, tpmkey, value), Fr(secret)] --[]-> [State_11111111211111111(aik, bindkey, n, secret, tpmkey, value)]

rule event_Secretsecret_11111111211111111 [color=#45D1E2]: // [process=envelope] event Secret(secret) 
 [State_11111111211111111(aik, bindkey, n, secret, tpmkey, value)] --[Event(), Secret(secret)]-> [State_111111112111111111(aik, bindkey, n, secret, tpmkey, value)]

rule event_AttestValuehh_zero_n_deny__111111112111111111 [color=#45D1E2]: // [process=envelope] event AttestValue(h(h('zero', n), 'deny')) 
 [State_111111112111111111(aik, bindkey, n, secret, tpmkey, value)] --[Event(), AttestValue(h(h('zero', n), 'deny'))]-> [State_1111111121111111111(aik, bindkey, n, secret, tpmkey, value)]

rule out_aencsecret_pkbindkey_1111111121111111111 [color=#45D1E2]: // [process=envelope] out aenc(secret, pk(bindkey)) 
 [State_1111111121111111111(aik, bindkey, n, secret, tpmkey, value)] --[]-> [State_11111111211111111111(aik, bindkey, n, secret, tpmkey, value), Out(aenc(secret, pk(bindkey)))]

rule Zero_11111111211111111111 [color=#45D1E2]: // [process=envelope] Zero 
 [State_11111111211111111111(aik, bindkey, n, secret, tpmkey, value)] --[]-> []

rule Zero_111111112112 [color=#45D1E2]: // [process=envelope] Zero 
 [State_111111112112(aik, tpmkey, value)] --[]-> []

rule Zero_11111111212 [color=#45D1E2]: // [process=envelope] Zero 
 [State_11111111212(aik, tpmkey)] --[]-> []

rule Rep_0_11111112 [color=#9F76CD]: // [process=quote] Rep, 0 
 [State_11111112(aik, tpmkey)] --[]-> [!Semistate_111111121(aik, tpmkey)]

rule Rep_1_11111112 [color=#9F76CD]: // [process=quote] Rep, 1 
 [!Semistate_111111121(aik, tpmkey)] --[]-> [State_111111121(aik, tpmkey)]

rule in_msg_111111121 [color=#9F76CD]: // [process=quote] in msg 
 [State_111111121(aik, tpmkey), In(msg)] --[]-> [State_1111111211(aik, msg, tpmkey)]

rule lookup_pcr_as_value_0_1111111211 [color=#9F76CD]: // [process=quote] lookup 'pcr' as value, 0 
 [State_1111111211(aik, msg, tpmkey)] --[IsIn('pcr', value)]-> [State_11111112111(aik, msg, tpmkey, value)]

rule lookup_pcr_as_value_1_1111111211 [color=#9F76CD]: // [process=quote] lookup 'pcr' as value, 1 
 [State_1111111211(aik, msg, tpmkey)] --[IsNotSet('pcr')]-> [State_11111112112(aik, msg, tpmkey)]

rule out_sign_value_msg_aik_11111112111 [color=#9F76CD]: // [process=quote] out sign(<value, msg>, aik) 
 [State_11111112111(aik, msg, tpmkey, value)] --[]-> [State_111111121111(aik, msg, tpmkey, value), Out(sign(<value, msg>, aik))]

rule Zero_111111121111 [color=#9F76CD]: // [process=quote] Zero 
 [State_111111121111(aik, msg, tpmkey, value)] --[]-> []

rule Zero_11111112112 [color=#9F76CD]: // [process=quote] Zero 
 [State_11111112112(aik, msg, tpmkey)] --[]-> []

rule Rep_0_1111112 [color=#EE415C]: // [process=unseal] Rep, 0 
 [State_1111112(aik, tpmkey)] --[]-> [!Semistate_11111121(aik, tpmkey)]

rule Rep_1_1111112 [color=#EE415C]: // [process=unseal] Rep, 1 
 [!Semistate_11111121(aik, tpmkey)] --[]-> [State_11111121(aik, tpmkey)]

rule in_aenc_wrap_key_pcrvalue_tpmkey_11111121 [color=#EE415C]: // [process=unseal] in aenc(<'wrap', key, pcrvalue>, tpmkey) 
 [State_11111121(aik, tpmkey), In(aenc(<'wrap', key, pcrvalue>, tpmkey))] --[]-> [State_111111211(aik, key, pcrvalue, tpmkey)]

rule in_aencmsg_pkkey_111111211 [color=#EE415C]: // [process=unseal] in aenc(msg, pk(key)) 
 [State_111111211(aik, key, pcrvalue, tpmkey), In(aenc(msg, pk(key)))] --[]-> [State_1111112111(aik, key, msg, pcrvalue, tpmkey)]

rule lookup_pcr_as_actualvalue_0_1111112111 [color=#EE415C]: // [process=unseal] lookup 'pcr' as actualvalue, 0 
 [State_1111112111(aik, key, msg, pcrvalue, tpmkey)] --[IsIn('pcr', actualvalue)]-> [State_11111121111(actualvalue, aik, key, msg, pcrvalue, tpmkey)]

rule lookup_pcr_as_actualvalue_1_1111112111 [color=#EE415C]: // [process=unseal] lookup 'pcr' as actualvalue, 1 
 [State_1111112111(aik, key, msg, pcrvalue, tpmkey)] --[IsNotSet('pcr')]-> [State_11111121112(aik, key, msg, pcrvalue, tpmkey)]

rule if_eqpcrvalue_actualvalue_0_11111121111 [color=#EE415C]: // [process=unseal] if eq(pcrvalue, actualvalue), 0 
 [State_11111121111(actualvalue, aik, key, msg, pcrvalue, tpmkey)] --[Pred_eq(pcrvalue, actualvalue)]-> [State_111111211111(actualvalue, aik, key, msg, pcrvalue, tpmkey)]

rule if_eqpcrvalue_actualvalue_1_11111121111 [color=#EE415C]: // [process=unseal] if eq(pcrvalue, actualvalue), 1 
 [State_11111121111(actualvalue, aik, key, msg, pcrvalue, tpmkey)] --[Pred_not_eq(pcrvalue, actualvalue)]-> [State_111111211112(actualvalue, aik, key, msg, pcrvalue, tpmkey)]

rule out_msg_111111211111 [color=#EE415C]: // [process=unseal] out msg 
 [State_111111211111(actualvalue, aik, key, msg, pcrvalue, tpmkey)] --[]-> [State_1111112111111(actualvalue, aik, key, msg, pcrvalue, tpmkey), Out(msg)]

rule Zero_1111112111111 [color=#EE415C]: // [process=unseal] Zero 
 [State_1111112111111(actualvalue, aik, key, msg, pcrvalue, tpmkey)] --[]-> []

rule Zero_111111211112 [color=#EE415C]: // [process=unseal] Zero 
 [State_111111211112(actualvalue, aik, key, msg, pcrvalue, tpmkey)] --[]-> []

rule Zero_11111121112 [color=#EE415C]: // [process=unseal] Zero 
 [State_11111121112(aik, key, msg, pcrvalue, tpmkey)] --[]-> []

rule lookup_pcr_as_value_0_111112 [color=#79A554]: // [process=attest_not_reading] lookup 'pcr' as value, 0 
 [State_111112(aik, tpmkey)] --[IsIn('pcr', value)]-> [State_1111121(aik, tpmkey, value)]

rule lookup_pcr_as_value_1_111112 [color=#79A554]: // [process=attest_not_reading] lookup 'pcr' as value, 1 
 [State_111112(aik, tpmkey)] --[IsNotSet('pcr')]-> [State_1111122(aik, tpmkey)]

rule event_Attestvalue_1111121 [color=#79A554]: // [process=attest_not_reading] event Attest(value) 
 [State_1111121(aik, tpmkey, value)] --[Event(), Attest(value)]-> [State_11111211(aik, tpmkey, value)]

rule Zero_11111211 [color=#79A554]: // [process=attest_not_reading] Zero 
 [State_11111211(aik, tpmkey, value)] --[]-> []

rule Zero_1111122 [color=#79A554]: // [process=attest_not_reading] Zero 
 [State_1111122(aik, tpmkey)] --[]-> []

 restriction set_in:
"All x y #t3 . IsIn(x,y)@t3 ==>
        (Ex #t2 . Insert(x,y)@t2 & #t2<#t3 
                & ( All #t1 . Delete(x)@t1 ==> (#t1<#t2 |  #t3<#t1))
                & ( All #t1 yp . Insert(x,yp)@t1 ==> (#t1<#t2 | #t1=#t2 | #t3<#t1))
)"

restriction set_notin:
"All x #t3 . IsNotSet(x)@t3 ==> 
        (All #t1 y . Insert(x,y)@t1 ==>  #t3<#t1 )
  | ( Ex #t1 .   Delete(x)@t1 & #t1<#t3 
                &  (All #t2 y . Insert(x,y)@t2 & #t2<#t3 ==>  #t2<#t1))"


restriction predicate_eq:
"All #i a b. Pred_eq(a,b)@i ==> a = b"


restriction predicate_not_eq:
"All #i a b. Pred_not_eq(a,b)@i ==> not(a = b)"


restriction single_session: // for a single session
    "All #i #j. Init()@i & Init()@j ==> #i=#j"

lemma sanity1 : exists-trace
"	Ex s #i #j. Secret(s) @ i & K(s) @ j"

lemma nameorproperty :
"	not( Ex s attestation #i #j #k #l. Secret(s) @ i & K(s) @ j & AttestValue(attestation) @ k & Attest(attestation) @ l )"

end
