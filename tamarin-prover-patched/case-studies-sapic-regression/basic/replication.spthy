theory Replication
begin

functions: rep/2 [private], check_rep/2, get_rep/1
equations: check_rep(rep(m,loc),loc)=m, get_rep(rep(m,loc))=m

heuristic: p /* heuristic for SAPIC */

rule Init_: // [process=top-level] Init 
 [] --[Init()]-> [State_()]

rule Rep_0_: // [process=top-level] Rep, 0 
 [State_()] --[]-> [!Semistate_1()]

rule Rep_1_: // [process=top-level] Rep, 1 
 [!Semistate_1()] --[]-> [State_1()]

rule new_s_1: // [process=top-level] new s 
 [State_1(), Fr(s)] --[]-> [State_11(s)]

rule event_Secrets_11: // [process=top-level] event Secret(s) 
 [State_11(s)] --[Event(), Secret(s)]-> [State_111(s)]

rule out_s_111: // [process=top-level] out s 
 [State_111(s)] --[]-> [State_1111(s), Out(s)]

rule Zero_1111: // [process=top-level] Zero 
 [State_1111(s)] --[]-> []


restriction single_session: // for a single session
    "All #i #j. Init()@i & Init()@j ==> #i=#j"

lemma onlyOneSecret :
"	All #i #j x y. Secret(x) @ i & Secret(y) @ j ==> x = y"

end
